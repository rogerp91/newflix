ext {

    android = [
            appCompat    : "androidx.appcompat:appcompat:${appCompatVersion}",
            corektx      : "androidx.core:core-ktx:${coreKtxVersion}",
            legacySupport: "androidx.legacy:legacy-support-v4:${legacySupportVersion}",
            ui           : [
                    cardview    : "androidx.cardview:cardview:${cardViewVersion}",
                    recyclerview: "androidx.recyclerview:recyclerview:${recyclerViewVersion}",
                    constraint  : "androidx.constraintlayout:constraintlayout:${constraintlayoutVersion}"
            ],
            life         : [
                    lifeCycleExtension      : "androidx.lifecycle:lifecycle-extensions:${lifeCycleVersion}",
                    lifeCycleCompiler       : "androidx.lifecycle:lifecycle-compiler:${lifeCycleVersion}",
                    lifeCycleReactiveStreams: "androidx.lifecycle:lifecycle-reactivestreams:${lifeCycleVersion}",
                    lifeCycleCommonJava     : "androidx.lifecycle:lifecycle-common-java8:${lifeCycleVersion}",
            ],
            nav          : [
                    fragment: "androidx.navigation:navigation-fragment:$navVersion",
                    ui      : "androidx.navigation:navigation-ui:$navVersion"
            ],
            db           : [
                    roomRuntime : "androidx.room:room-runtime:${roomVersion}",
                    roomCompiler: "androidx.room:room-compiler:${roomVersion}",
            ]
    ]

    kotlin = [
            std: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"
    ]

    rx = [
            java   : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin : "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            android: "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            db     : [
                    roomRxjava2: "android.arch.persistence.room:rxjava2:${roomRxJava2Version}"
            ]
    ]

    network = [
            retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitRxJavaAdapter: "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            okHttp3              : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttp3Logging       : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            stetho               : "com.facebook.stetho:stetho:${stethoVersion}",
            stethoOkHttp         : "com.facebook.stetho:stetho-okhttp3:${stethoOkHttpVersion}"
    ]

    common = [
            leakcanary: "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            gson      : "com.google.code.gson:gson:${gsonVersion}",
            coil      : "io.coil-kt:coil:${coilVersion}",
            di        : [
                    dagger                 : "com.google.dagger:dagger:${daggerVersion}",
                    daggerAndroid          : "com.google.dagger:dagger-android:${daggerVersion}",
                    daggerAnddropidSupport : "com.google.dagger:dagger-android-support:${daggerVersion}",
                    daggerCompiler         : "com.google.dagger:dagger-compiler:${daggerVersion}",
                    daggerSupport          : "com.google.dagger:dagger-android-support:${daggerVersion}",
                    daggerAndroidProccessor: "com.google.dagger:dagger-android-processor:${daggerVersion}"
            ]
    ]

    test = [
            junit         : "junit:junit:${junitVersion}",
            extjunit      : "androidx.test.ext:junit:${extJunitVersion}",
            espresso      : "androidx.test.espresso:espresso-core:${espressoVersion}",
            mockito       : "org.mockito:mockito-core:${mockitoVersion}",
            mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric   : "org.robolectric:robolectric:${robolectricVersion}"
    ]

    javax = [
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject    : "javax.inject:javax.inject:${javaxInjectVersion}"
    ]
}